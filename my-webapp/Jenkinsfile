pipeline {
    agent any

    tools {
        maven "MAVEN"   // Must match Jenkins Maven tool configuration
        jdk "JDK-17"    // Use JDK 17 installed in Jenkins
    }

    environment {
        DOCKER_IMAGE = "rukevweubio/web-application"
        DOCKER_TAG = "latest"
        DOCKER_CREDENTIAL_ID = "docker_ubiohub"
        GIT_BRANCH = "main"

        // Persistent cache directories
        DEP_CHECK_CACHED_DIR = "${HOME}/dependency-check-data"
        MAVEN_CACHE = "${HOME}/.m2/repository"
    }

    options {
        skipDefaultCheckout()
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${GIT_BRANCH}", url: "https://github.com/rukevweubio/Jenkins-Maven-Docker-ECR-Pipeline.git"
            }
        }

        stage('Maven Build') {
            steps {
                dir('my-webapp') {
                    sh "mvn clean package -DskipTests -Dmaven.repo.local=${MAVEN_CACHE}"
                }
            }
        }

        stage('Run JUnit Tests') {
            steps {
                dir('my-webapp') {
                    sh "mvn test -Dmaven.repo.local=${MAVEN_CACHE}"
                }
            }
            post {
                always {
                    junit 'my-webapp/target/surefire-reports/*.xml'
                }
            }
        }

        stage('JaCoCo Coverage') {
            steps {
                dir('my-webapp') {
                    sh "mvn jacoco:report -Dmaven.repo.local=${MAVEN_CACHE}"
                }
            }
            post {
                always {
                    jacoco execPattern: 'my-webapp/target/jacoco.exec',
                           classPattern: 'my-webapp/target/classes',
                           sourcePattern: 'my-webapp/src/main/java'
                }
            }
        }

        stage('Dependency Check (Cached)') {
            steps {
                dir('my-webapp') {
                    sh """
                        mkdir -p ${DEP_CHECK_CACHED_DIR}
                        mvn org.owasp:dependency-check-maven:check \
                            -Dnvd.api.key=60e59b9f-d53a-4679-97ae-e5f3bb8eb7ac \
                            -DdataDirectory=${DEP_CHECK_CACHED_DIR} \
                            -Dmaven.repo.local=${MAVEN_CACHE} \
                            -Dformat=HTML
                    """
                }
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker_ubiohub', 
                    usernameVariable: 'DOCKER_USERNAME', 
                    passwordVariable: 'DOCKER_PASSWORD')]) {
                    
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('my-webapp'){
                    sh "docker build -t $DOCKER_IMAGE:$DOCKER_TAG ."
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('my-webapp'){
                    sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
                }
            }
        }
    }
}
